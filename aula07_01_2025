-- Tabela Clientes
CREATE TABLE IF NOT EXISTS CLIENTES(
ID SERIAL PRIMARY KEY,
NOME VARCHAR(60) NOT NULL,
CPF VARCHAR(15) NOT NULL UNIQUE,
EMAIL VARCHAR(60) UNIQUE,
DATA_CADASTRO TIMESTAMP DEFAULT (CURRENT_TIMESTAMP) NOT NULL
);

--Tabela Produtos
CREATE TABLE IF NOT EXISTS PRODUTOS(
ID SERIAL PRIMARY KEY,
NOME VARCHAR(60) NOT NULL,
DESCRICAO TEXT,
PRECO NUMERIC NOT NULL CHECK (PRECO > 0),
DATA_CADASTRO TIMESTAMP DEFAULT (CURRENT_TIMESTAMP)
);

--Tabela Funcionarios
CREATE TABLE IF NOT EXISTS FUNCIONARIOS(
ID SERIAL PRIMARY KEY,
NOME VARCHAR(60) NOT NULL UNIQUE,
CPF VARCHAR(14) NOT NULL UNIQUE,
CARGO_FUNCIONARIO VARCHAR(30) NOT NULL,
EMAIL VARCHAR(60) UNIQUE
);

--Tabela vendas
CREATE TABLE IF NOT EXISTS VENDAS(
ID SERIAL PRIMARY KEY,
CLIENTES_ID INT,
FUNCIONARIOS_ID INT,
DATA_VENDA TIMESTAMP DEFAULT (CURRENT_TIMESTAMP),
TOTAL_VENDA NUMERIC NOT NULL CHECK (TOTAL_VENDA > 0),
CONSTRAINT FK_CLIENTES FOREIGN KEY (CLIENTES_ID) REFERENCES CLIENTES(ID),
CONSTRAINT FK_FUNCIONARIOS FOREIGN KEY (FUNCIONARIOS_ID) REFERENCES FUNCIONARIOS(ID)
);

--Tavela itens vendas
CREATE TABLE IF NOT EXISTS ITENS_VENDA(
ID SERIAL PRIMARY KEY,
VENDAS_ID INT,
PRODUTOS_ID INT,
QUANTIDADE_ITENS NUMERIC NOT NULL CHECK (QUANTIDADE_ITENS > 0),
PRECO_UNITARIO NUMERIC(10,2) NOT NULL,
SUBTOTAL NUMERIC(10,2) NOT NULL,
CONSTRAINT FK_PRODUTOS_ID FOREIGN KEY (PRODUTOS_ID) REFERENCES PRODUTOS(ID) ON DELETE CASCADE,
CONSTRAINT FK_VENDAS_ID FOREIGN KEY (VENDAS_ID) REFERENCES VENDAS(ID) ON DELETE SET NULL
);

INSERT INTO clientes (nome, cpf, email, DATA_CADASTRO) VALUES
('João Silva', '12345678901', 'joao@email.com', '2024-01-07'),
('Maria Souza', '98765432100', 'maria@email.com', '2024-01-07'),
('Pedro Santos', '11223344556', 'santos@email.com', '2024-01-07'),
('Ana Oliveira', '22334455667', 'ana@email.com', '2024-01-07'),
('Carlos Lima', '33445566778', 'carlos@email.com', '2024-01-07');

INSERT INTO produtos (NOME, DESCRICAO, PRECO, DATA_CADASTRO) VALUES
('Notebook', 'Notebook com 16GB RAM e 512GB SSD', 3500.00, '2024-01-07'),
('Smartphone', 'Celular com 128GB de armazenamento', 2000.00, '2024-01-07'),
('Mouse', 'Mouse sem fio', 50.00, '2024-01-07'),
('Teclado', 'Teclado mecânico com iluminação RGB', 150.00, '2024-01-07'),
('Monitor', 'Monitor Full HD 24 polegadas', 800.00, '2024-01-07');

INSERT INTO funcionarios (nome, cpf, CARGO_FUNCIONARIO, email) 
VALUES('Lucas Almeida', '55566677788', 'Vendedor', 'lucas@email.com'),
('Fernanda Costa', '11224466880', 'Gerente', 'costa@email.com'),
('Paulo Ramos', '22113344556', 'Analista', 'paulo@email.com'),
('Beatriz Melo', '33445566799', 'Assistente','melo@email.com'),
('Ricardo Lopes', '77889900112', 'Vendedor','ricardo@email.com');

INSERT INTO vendas (CLIENTES_ID, FUNCIONARIOS_ID, DATA_VENDA, TOTAL_VENDA) 
VALUES
(1, 1, '2024-01-07', 4500.00),
(2, 2, '2024-01-07', 1500.00),
(3, 4, '2024-01-07', 200.00),
(4, 3, '2024-01-07', 100.00),
(5, 5,'2024-01-07', 800.00);

INSERT INTO itens_venda (vendaS_id, produtoS_id, quantidade_ITENS, preco_unitario, subtotal) VALUES
(1, 1, 1, 3500.00, 3500.00),
(1, 2, 1, 2000.00, 2000.00),
(2, 3, 2, 50.00, 100.00),
(3, 4, 1, 150.00, 150.00),
(4, 5, 1, 800.00, 800.00);

--SELECT * FROM CLIENTES;
--SELECT * FROM PRODUTOS;
--SELECT * FROM FUNCIONARIOS ;
--SELECT * FROM VENDAS;
--SELECT * FROM ITENS_VENDA;


--1 LISTE O TOTAL DE VENDAS REALIZADAS POR CADA CLIENTE
SELECT * FROM VENDAS;
SELECT CLIENTES.NOME AS NOME_FUNCIONARIOS COUNT(VENDAS.CLIENTES_ID) AS TOTAL_VENDA
FROM VENDAS
JOIN CLIENTE ON VENDA.CLIENTE_ID = CLIENTE.ID
GROUP BY CLIENTES_ID
ORDER BY CLIENTES_ID;

--2
SELECT * FROM VENDAS;
SELECT FUNCIONARIOS.NOME, COUNT(VENDAS.FUNCIONARIOS_ID) AS TOTAL_VENDA_FUNCIONARIOS
FROM VENDAS
JOIN FUNCIONARIOS ON VENDAS.FUNCIONARIOS_ID = FUNCIONARIOS.ID
GROUP BY FUNCIONARIOS.NOME
ORDER BY FUNCIONARIOS.NOME ASC;